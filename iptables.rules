*raw
-A PREROUTING -d 173.208.213.114 -p tcp --dport 22,9001,9030 -j NOTRACK
-A PREROUTING -i lo -o lo -j NOTRACK
-A OUTPUT -s 173.208.213.114 -p tcp --sport 22,9001,9030 -j NOTRACK
-A OUTPUT -i lo -o lo -j NOTRACK

COMMIT

*filter
:INPUT DROP [19:1024]
:FORWARD DROP [0:0]
:OUTPUT DROP [0:0]
:drop-and-log-it - [0:0]
:icmp_packets - [0:0]
:tcp_packets - [0:0]
:udp_packets - [0:0]


#######################################################################
# INPUT: Incoming traffic from various interfaces.  All rulesets are
#        already flushed and set to a default policy of DROP.
#

## Allows all loopback (lo0) traffic and drop all traffic to 127/8 that doesn't use lo0
-A INPUT -i lo -j ACCEPT

## Allows any related traffic coming back to the server
-A INPUT -d 173.208.213.114/32 -m state --state RELATED,ESTABLISHED -j ACCEPT

## Drop INVALID packets
-A INPUT -m conntrack --ctstate INVALID -j DROP
-A INPUT -m state --state INVALID -j DROP

## Drop invalid SYN packets
-A INPUT -p tcp --tcp-flags ALL ACK,RST,SYN,FIN -j DROP
-A INPUT -p tcp --tcp-flags SYN,FIN SYN,FIN -j DROP
-A INPUT -p tcp --tcp-flags SYN,RST SYN,RST -j DROP

## Drop packets with incoming fragments. This attack once resulted in kernel panics
-A INPUT -f -j DROP

## Drop incoming malformed XMAS packets
-A INPUT -p tcp --tcp-flags ALL ALL -j DROP

## Drop incoming malformed NULL packets
-A INPUT -p tcp --tcp-flags ALL NONE -j DROP

-A INPUT -i eth0 -p tcp -j tcp_packets
-A INPUT -i eth0 -p udp -j udp_packets
-A INPUT -i eth0 -p icmp -j icmp_packets

## Logs weird packets that don't match the above
#-A INPUT -j LOG --log-level debug --log-prefix "IPT INPUT packet died: "


#######################################################################
# FORWARD: Disabled by default.
#

## Logs forwarded packets
-A FORWARD -j LOG --log-prefix "IPT FORWARD packet died: " --log-level 7


#######################################################################
# OUTPUT: Outgoing traffic from various interfaces.  All rulesets are
#         already flushed and set to a default policy of DROP.
#

## Allows loopback interface
-A OUTPUT -o lo -j ACCEPT

## https://lists.torproject.org/pipermail/tor-talk/2014-March/032507.html
-A OUTPUT -m conntrack --ctstate INVALID -j REJECT --reject-with icmp-admin-prohibited
-A OUTPUT -m state --state INVALID -j REJECT --reject-with icmp-admin-prohibited

## Drop invalid SYN packets
-A OUTPUT -p tcp --tcp-flags ALL ACK,RST,SYN,FIN -j REJECT --reject-with icmp-admin-prohibited
-A OUTPUT -p tcp --tcp-flags SYN,FIN SYN,FIN -j REJECT --reject-with icmp-admin-prohibited
-A OUTPUT -p tcp --tcp-flags SYN,RST, SYN,RST -j REJECT --reject-with icmp-admin-prohibited

## Drop packets with incoming fragments. This attack once resulted in kernel panics
-A OUTPUT -f -j REJECT --reject-with icmp-admin-prohibited

## Drop incoming malformed XMAS packets
-A OUTPUT -p tcp --tcp-flags ALL ALL -j REJECT --reject-with icmp-admin-prohibited

## Drop incoming malformed NULL packets
-A OUTPUT -p tcp --tcp-flags ALL NONE -j REJECT --reject-with icmp-admin-prohibited

## Allows everything coming from our ip
-A OUTPUT -s 173.208.213.114/32 -j ACCEPT

## Logs weird packets that don't match the above
-A OUTPUT -j LOG --log-prefix "IPT OUTPUT packet died: " --log-level 7


## DROP chain
-A drop-and-log-it -j LOG --log-level 6
-A drop-and-log-it -j REJECT --reject-with icmp-port-unreachable

## Allow several ICMP types 
## http://www.oregontechsupport.com/articles/icmp.txt
-A icmp_packets -p icmp -m icmp --icmp-type host-unreachable -j ACCEPT
-A icmp_packets -p icmp -m icmp --icmp-type port-unreachable -j ACCEPT
-A icmp_packets -p icmp -m icmp --icmp-type fragmentation-needed -j ACCEPT
-A icmp_packets -p icmp -m icmp --icmp-type source-quench -j ACCEPT
-A icmp_packets -p icmp -m icmp --icmp-type echo-reply -j ACCEPT
-A icmp_packets -p icmp -m icmp --icmp-type echo-request -m limit --limit 5/sec -j ACCEPT
-A icmp_packets -p icmp -m icmp --icmp-type echo-request -j DROP

## Allows ssh, ORPort and DirPort
-A tcp_packets -p tcp -m tcp --dport 22 -j ACCEPT
-A tcp_packets -p tcp -m tcp --dport 9001 -j ACCEPT
-A tcp_packets -p tcp -m tcp --dport 9030 -j ACCEPT

## Allows udp packets
-A udp_packets -j ACCEPT

COMMIT

